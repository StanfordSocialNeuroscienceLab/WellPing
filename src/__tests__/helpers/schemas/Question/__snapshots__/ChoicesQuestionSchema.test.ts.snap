// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChoicesQuestionSchema choices choices should not be duplicated 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at choices
  There should not be duplicate elements in the choices list.
"
`;

exports[`ChoicesQuestionSchema choices choices should not be duplicated 2`] = `
"1 validation issue(s)

  Issue #0: custom_error at choices
  There should not be duplicate elements in the choices list.
"
`;

exports[`ChoicesQuestionSchema choices choices string cannot be empty 1`] = `
"1 validation issue(s)

  Issue #0: too_small at choices.0
  Should be at least 1 characters
"
`;

exports[`ChoicesQuestionSchema choices choices string cannot be empty 2`] = `
"1 validation issue(s)

  Issue #0: too_small at choices.0
  Should be at least 1 characters
"
`;

exports[`ChoicesQuestionSchema choices should be an array of strings 1`] = `
"1 validation issue(s)

  Issue #0: invalid_union at choices
  Invalid input
"
`;

exports[`ChoicesQuestionSchema choices should not be empty 1`] = `
"1 validation issue(s)

  Issue #0: nonempty_array_is_empty at choices
  List must contain at least one item
"
`;

exports[`ChoicesQuestionSchema choices should not be undefined 1`] = `
"1 validation issue(s)

  Issue #0: invalid_union at choices
  Invalid input
"
`;

exports[`ChoicesQuestionSchema randomizeChoicesOrder should not be null 1`] = `
"1 validation issue(s)

  Issue #0: invalid_union at randomizeChoicesOrder
  Invalid input
"
`;

exports[`ChoicesQuestionSchema randomizeExceptForChoiceIds should not be non-choices keys: with choice keys 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at randomizeExceptForChoiceIds
  Keys in \`randomizeExceptForChoiceIds\` should also be present in \`choices\`.
"
`;

exports[`ChoicesQuestionSchema randomizeExceptForChoiceIds should not be non-choices keys: without choice keys 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at randomizeExceptForChoiceIds
  Keys in \`randomizeExceptForChoiceIds\` should also be present in \`choices\`.
"
`;

exports[`ChoicesQuestionSchema randomizeExceptForChoiceIds should not be null 1`] = `
"1 validation issue(s)

  Issue #0: invalid_union at randomizeExceptForChoiceIds
  Invalid input
"
`;

exports[`ChoicesQuestionSchema randomizeExceptForChoiceIds should not be set if \`randomizeChoicesOrder\` is false 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at randomizeExceptForChoiceIds
  \`randomizeExceptForChoiceIds\` should only be set when \`randomizeChoicesOrder\` is set to \`true\`.
"
`;

exports[`ChoicesQuestionSchema specialCasesStartId cannot include non-choices key: non-choices key only 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at specialCasesStartId
  Keys in \`specialCasesStartId\` must also be in \`choices\` or be \\"_pna\\".
"
`;

exports[`ChoicesQuestionSchema specialCasesStartId cannot include non-choices key: non-choices key with "_pna" 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at specialCasesStartId
  Keys in \`specialCasesStartId\` must also be in \`choices\` or be \\"_pna\\".
"
`;

exports[`ChoicesQuestionSchema specialCasesStartId cannot include non-choices key: non-choices key with choice key 1`] = `
"1 validation issue(s)

  Issue #0: custom_error at specialCasesStartId
  Keys in \`specialCasesStartId\` must also be in \`choices\` or be \\"_pna\\".
"
`;

exports[`ChoicesQuestionSchema specialCasesStartId should not be null 1`] = `
"1 validation issue(s)

  Issue #0: invalid_union at specialCasesStartId
  Invalid input
"
`;

exports[`ChoicesQuestionSchema type 1`] = `
"1 validation issue(s)

  Issue #0: invalid_union at type
  Invalid input
"
`;

exports[`ChoicesWithMultipleAnswersQuestionSchema type: ChoicesWithSingleAnswer 1`] = `
"1 validation issue(s)

  Issue #0: invalid_literal_value at type
  Input must be \\"ChoicesWithMultipleAnswers\\"
"
`;

exports[`ChoicesWithMultipleAnswersQuestionSchema type: other 1`] = `
"1 validation issue(s)

  Issue #0: invalid_literal_value at type
  Input must be \\"ChoicesWithMultipleAnswers\\"
"
`;

exports[`ChoicesWithSingleAnswerQuestionSchema type: ChoicesWithMultipleAnswers 1`] = `
"1 validation issue(s)

  Issue #0: invalid_literal_value at type
  Input must be \\"ChoicesWithSingleAnswer\\"
"
`;

exports[`ChoicesWithSingleAnswerQuestionSchema type: other 1`] = `
"1 validation issue(s)

  Issue #0: invalid_literal_value at type
  Input must be \\"ChoicesWithSingleAnswer\\"
"
`;
